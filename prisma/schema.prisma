datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String             @id @default(uuid())
  email             String             @unique
  password          String?
  name              String?
  role              UserRole           @default(USER)
  refreshTokens     RefreshToken[]
  affirmations      Affirmation[]      @relation("UserAffirmations")
  savedAffirmations SavedAffirmation[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
}

enum UserRole {
  USER
  MODERATOR
  ADMIN
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  revoked   Boolean  @default(false)
  expiresAt DateTime
}

enum AffirmationCategory {
  MOTIVATION
  CONFIDENCE
  GRATITUDE
  SELF_LOVE
  HAPPINESS
  SUCCESS
  CALMNESS
  MINDFULNESS
  WELLNESS
  HEALTH
  PEACE
  POSITIVITY
  INTENTION
  CAREER
  FAMILY
  FRIENDSHIP
  SPIRITUALITY
}

model Affirmation {
  id           String              @id @default(uuid())
  text         String
  category     AffirmationCategory
  language     String
  isPublic     Boolean             @default(false)
  isApproved   Boolean             @default(false)
  createdById  String?
  createdBy    User?               @relation("UserAffirmations", fields: [createdById], references: [id])
  savedByUsers SavedAffirmation[]
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
}

model SavedAffirmation {
  id            String      @id @default(uuid())
  userId        String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  affirmationId String
  affirmation   Affirmation @relation(fields: [affirmationId], references: [id], onDelete: Cascade)
  createdAt     DateTime    @default(now())

  @@unique([userId, affirmationId])
}
